class TeamVsTeam
!!!151299.php!!!	getId_team_1()
        return $this->id_team_1;
!!!151427.php!!!	setId_team_1(inout id_team_1 : )
        $this->id_team_1 = $id_team_1;
!!!151555.php!!!	getId_team_2()
        return $this->id_team_2;
!!!151683.php!!!	setId_team_2(inout id_team_2 : )
        $this->id_team_2 = $id_team_2;
!!!151811.php!!!	getId_round()
        return $this->id_round;
!!!151939.php!!!	setId_round(inout id_round : )
        $this->id_round = $id_round;
!!!152067.php!!!	saveTeamVsTeam(inout team1_id : , inout team2_id : , inout round_id : )

        require_once '../../persistencia/dBase.php';
        require_once '../../persistencia/persistencia.php';
        require_once '../../persistencia/laligadel5DBase.php';

        $conn = new DBase ( laligadel5DBase::$host, laligadel5DBase::$user, laligadel5DBase::$pass );
        $conn->selectDB ( laligadel5DBase::$database );

        $per = new Persistencia("select");
        $per->setTable("team_vs_team");
        $per->addColum ( 'count(id_team_1)' );
        $per->addWhere("id_round = ".$round_id);
        $per->addWhere("id_team_1 = ".$team2_id);
        $per->addWhere("id_team_2 = ".$team1_id);
        $str = $per->constructQuery ();
        $result = $per->doQuery ( $str );
        $per->viewData($result);
        $auxDatos = $per->returnValores();
        if($auxDatos[0] > 0){
            throw new Exception('Este partido ya se jugo', 101);
        }

        $per = new Persistencia("select");
        $per->setTable("team_vs_team");
        $per->addColum ( 'count(id_team_1)' );
        $per->addWhere("id_round = ".$round_id);
        $per->addWhere("id_team_1 = ".$team1_id);
        $per->addWhere("id_team_2 = ".$team2_id);
        $str = $per->constructQuery ();
        $result = $per->doQuery ( $str );
        $per->viewData($result);
        $auxDatos = $per->returnValores();
        if($auxDatos[0] > 0){
            throw new Exception('Este partido ya se jugo', 102);
        }

        $per1 = new Persistencia ( "INSERT" );
        $per1->setTable("team_vs_team");
        $per1->addColum ( 'id_team_1' );
        $per1->addColum ( 'id_team_2' );
        $per1->addColum ( 'id_round' );
        $per1->addValue ( $team1_id);
        $per1->addValue ( $team2_id);
        $per1->addValue ( $round_id);
        $str = $per1->constructQuery ();
        $result = $per1->doQuery ( $str );
        return true;
!!!152195.php!!!	getRoundTeamsAdmin(inout round_id : )
            require_once '../../persistencia/dBase.php';
            require_once '../../persistencia/persistencia.php';
            require_once '../../persistencia/laligadel5DBase.php';
            require_once '../../logica/Team.class.php';
            $conn = new DBase ( laligadel5DBase::$host, laligadel5DBase::$user, laligadel5DBase::$pass );
            $conn->selectDB ( laligadel5DBase::$database );
            $per = new Persistencia ( 'select' );

            $per->addColum ( "*" );
            $per->setTable ( "team_vs_team" );
            $per->addWhere("id_round = ".$round_id);
            $str = $per->constructQuery ();
            $result = $per->doQuery ( $str );
            $per->viewData($result);
            $auxDatos = $per->returnValores();
            $index = 0;
            $list = array();
            while($index+3 <= count($auxDatos)){
                $teamVsTeam = new TeamVsTeam();
                $teamVsTeam->setId_round($round_id);
                $team = Team::getTeamById($auxDatos[$index]);
                $teamVsTeam->setId_team_1($team);
                $team2 = Team::getTeamById($auxDatos[$index+1]);
                $teamVsTeam->setId_team_2($team2);
                array_push($list,$teamVsTeam);
                $index = $index+3;
            }
            return $list;
!!!152323.php!!!	getRoundTeams(inout round_id : )
            require_once './persistencia/dBase.php';
            require_once './persistencia/persistencia.php';
            require_once './persistencia/laligadel5DBase.php';
            require_once 'Team.class.php';
            $conn = new DBase ( laligadel5DBase::$host, laligadel5DBase::$user, laligadel5DBase::$pass );
            $conn->selectDB ( laligadel5DBase::$database );
            $per = new Persistencia ( 'select' );

            $per->addColum ( "*" );
            $per->setTable ( "team_vs_team" );
            $per->addWhere("id_round = ".$round_id);
            $str = $per->constructQuery ();
            $result = $per->doQuery ( $str );
            $per->viewData($result);
            $auxDatos = $per->returnValores();
            $index = 0;
            $list = array();
            while($index+3 <= count($auxDatos)){
                $teamVsTeam = new TeamVsTeam();
                $teamVsTeam->setId_round($round_id);
                $team = Team::getTeamById($auxDatos[$index]);
                $teamVsTeam->setId_team_1($team);
                $team2 = Team::getTeamById($auxDatos[$index+1]);
                $teamVsTeam->setId_team_2($team2);
                array_push($list,$teamVsTeam);
                $index = $index+3;
            }
            return $list;
!!!152451.php!!!	getTeamListPosition()
        require_once 'Round.class.php';
        require_once 'Player.class.php';
        $roundList = Round::getAll();
        $list = array();
        foreach($roundList as $round){
            $teamVsTeamList = self::getRoundTeams($round->getId());
            foreach($teamVsTeamList as $teamVsTeam){
                $goalsTeam1 = 0;
                $goalsTeam2 = 0;
                $listPlayerTeam = Player::getTeamRoundPlayers($teamVsTeam->getId_team_1()->getId(),$round->getId());
                foreach($listPlayerTeam as $player){
                    $goalsTeam1 += $player->getAuxGoals();
                }
                $listPlayerTeam = Player::getTeamRoundPlayers($teamVsTeam->getId_team_2()->getId(),$round->getId());
                foreach($listPlayerTeam as $player){
                    $goalsTeam2 += $player->getAuxGoals();
                }
                
                $id2 = $teamVsTeam->getId_team_2()->getId();
                $id1 = $teamVsTeam->getId_team_1()->getId();
                $auxTeam1 = new auxTeam();
                if(array_key_exists($id1,$list)){
                    $auxTeam1 = auxTeam::fromArray($list[$id1]);
                }else{
                    $auxTeam1->setTeamName($teamVsTeam->getId_team_1()->getName());
                }

                $auxTeam2 = new auxTeam();
                if(array_key_exists($id2,$list)){
                    $auxTeam2 = auxTeam::fromArray($list[$id2]);
                }else{
                    $auxTeam2->setTeamName($teamVsTeam->getId_team_2()->getName());
                }
                $auxTeam1->setGoalsFavor($goalsTeam1);
                $auxTeam1->setGoalsAgainst($goalsTeam2);
                $auxTeam2->setGoalsFavor($goalsTeam2);
                $auxTeam2->setGoalsAgainst($goalsTeam1);

                if($goalsTeam1 > $goalsTeam2){
                    $auxTeam1->setWin(1);
                    $auxTeam2->setLost(1);
                }else{
                    if($goalsTeam1 == $goalsTeam2){
                        $auxTeam1->setTie(1);
                        $auxTeam2->setTie(1);
                    }else{
                        $auxTeam2->setWin(1);
                        $auxTeam1->setLost(1);
                    }
                }
                $list[$id1] = auxTeam::resultToArray($auxTeam1);
                $list[$id2] = auxTeam::resultToArray($auxTeam2);
            }
        }
        $auxaux = new auxTeam();
        //return $auxaux->orderByGoalsDifference($list);
        return auxTeam::orderByGoalsDifference($list); //$list;
